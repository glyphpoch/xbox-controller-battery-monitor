<UserControl x:Class="Xbca.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Xbca.Views"
             xmlns:valueconverters="clr-namespace:Xbca.ValueConverters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <valueconverters:ControllerIdToHiddenConverter x:Key="ControllerListVisibilityConverter"/>
        <valueconverters:BatteryTypeToDescriptionConverter x:Key="BatteryTypeToDescriptionConverter" />
        <valueconverters:ChargeValueToLevelConverter x:Key="ChargeValueToLevelConverter" /> 

        <Style TargetType="TextBlock" x:Key="StatusBarTextBlock">
            <Setter Property="TextWrapping" Value="NoWrap" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>

        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="RowStyle" Value="{DynamicResource DataGridRowStyle}"/>
            <Setter Property="CellStyle" Value="{DynamicResource DataGridCellStyle}"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="ColumnWidth" Value="*"/>
            <Setter Property="HorizontalGridLinesBrush" Value="Silver"/>
            <Setter Property="VerticalGridLinesBrush" Value="Silver"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="10,10,10,10"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
        </Style>

        <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="WhiteSmoke" />
        </Style>

        <Style x:Key="OptionsMenuItem" TargetType="MenuItem">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>

        <Style x:Key="CheckableOptionsMenuItem" TargetType="MenuItem" BasedOn="{StaticResource OptionsMenuItem}">
            <Setter Property="IsCheckable" Value="True" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition/>
            <RowDefinition Height="23"/>
        </Grid.RowDefinitions>

        <DataGrid x:Name="datagrid_controller" ItemsSource="{Binding Controllers, UpdateSourceTrigger=PropertyChanged}"
                  Style="{DynamicResource DataGridStyle1}" Grid.Row="1">
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <!--<Setter Property="Background" Value="WhiteSmoke" />-->
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Id, Converter={StaticResource ControllerListVisibilityConverter}}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{Binding UniqueId}" />

                                <TextBlock Grid.Row="1" Text="{Binding BatteryReportData}" />
                            </Grid>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="28"/>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="2.5*"/>
                <DataGridTextColumn Header="Battery level" Binding="{Binding BatteryValue, Converter={StaticResource ChargeValueToLevelConverter}}" Width="*"/>
                <DataGridTextColumn Header="Battery type" Binding="{Binding BatteryType, Converter={StaticResource BatteryTypeToDescriptionConverter}}" Width="1.2*"/>
                <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="*"/>
            </DataGrid.Columns>
        </DataGrid>

        <StatusBar Grid.Row="2">
            <TextBlock>Status:</TextBlock>
            <TextBlock x:Name="tb_status" Text="{Binding Path=StatusBarText}"></TextBlock>
        </StatusBar>

        <Menu x:Name="menu" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="0">
            <MenuItem Header="Options">
                <!-- Oversimplified: StaticResource - when xaml loads (before app runs), DynamicResource - not evaluated till used -->
                <!-- TODO: remove IsEnabled -->
                <MenuItem Header="Run On Windows Startup" Style="{StaticResource CheckableOptionsMenuItem}"
                          x:Name="menu_startup" IsChecked="{Binding Path=IsStartupChecked}" />

                <MenuItem Header="Start Minimized To Tray" Style="{StaticResource CheckableOptionsMenuItem}"
                          x:Name="menu_startMinimized" IsChecked="{Binding Path=IsStartMinimizedChecked}" />

                <MenuItem Header="Close To Tray" Style="{StaticResource CheckableOptionsMenuItem}"
                          x:Name="menu_closeToTray" IsChecked="{Binding Path=IsCloseToTrayChecked}" />
                <Separator />

                <MenuItem Header="Notify When Battery" Style="{StaticResource OptionsMenuItem}">
                    <MenuItem Header="Low" Style="{StaticResource CheckableOptionsMenuItem}"
                              x:Name="menu_low" IsChecked="{Binding Path=IsNotifyLowChecked}" />

                    <MenuItem Header="Medium" Style="{StaticResource CheckableOptionsMenuItem}"
                              x:Name="menu_medium" IsChecked="{Binding Path=IsNotifyMediumChecked}" />

                    <MenuItem Header="High" Style="{StaticResource CheckableOptionsMenuItem}"
                              IsEnabled="False" x:Name="menu_high" IsChecked="{Binding Path=IsNotifyHighChecked}" />
                </MenuItem>

                <MenuItem Header="Notify Limit" Style="{StaticResource OptionsMenuItem}" >
                    <MenuItem Header="Once" Style="{StaticResource CheckableOptionsMenuItem}"
                              x:Name="menu_once" IsChecked="{Binding Path=IsNotifyOnceChecked}" />

                    <MenuItem Header="Every Hour" Style="{StaticResource CheckableOptionsMenuItem}"
                              x:Name="menu_onehour" IsChecked="{Binding Path=IsNotifyEveryHourChecked}" />

                    <MenuItem Header="Every 4 Hours" Style="{StaticResource CheckableOptionsMenuItem}"
                              x:Name="menu_4hours" IsChecked="{Binding Path=IsNotifyEvery4HoursChecked}" />
                </MenuItem>

                <Separator />

                <!-- Don't really need the CommandParameter but keeping this here for reference. -->
                <MenuItem Header="Quit" Style="{StaticResource OptionsMenuItem}" x:Name="menu_quit" 
                          Command="{Binding QuitCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Name}" />
            </MenuItem>
        </Menu>
    </Grid>
</UserControl>
